using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace PyramidRaiderLevelEditor.Solver
{
    public class State
    {
        private short[][][] maze;
        // 111111 last four digits: up, right, down, left
        // first two digits: key, traps
        private MummyWhite[] mummyWhite;
        private MummyRed[] mummyRed;
        private ScorpionWhite[] sk;
        private ScorpionRed[] skRed;
        private Keyd[] key;
        private Human human;
        private short step;

        public State(short[][][] maze, Keyd[] key, MummyWhite[] mummyWhite, MummyRed[] mummyRed,
                ScorpionWhite[] sk, ScorpionRed[] skRed, Human human, short step)
        {
            this.maze = maze;
            this.key = key;
            this.mummyWhite = mummyWhite;
            this.mummyRed = mummyRed;
            this.sk = sk;
            this.skRed = skRed;
            this.human = human;
            this.step = step;
        }

        public State cloneState() {
            short [][][] mazee = this.getMaze();
            Keyd [] newKey = this.getKey();
            MummyWhite[] mummyWhitee = this.getMummyWhite();
            MummyRed[] mummyRede = this.getMummyRed();
            ScorpionWhite[] ske = this.getSk();
            ScorpionRed [] skRede = this.getSkRed();
            Human humane = this.getHuman();
            short stepe = this.getStep();
        
            short[][][] newMaze = new short[mazee.Length][][];
            for (int i = 0; i < newMaze.Length; i++)
            {
                newMaze[i] = new short[mazee[0].Length][];
                for (int j = 0; j < newMaze[i].Length; j++)
                {
                    newMaze[i][j] = new short[mazee[0][0].Length];
                }
            }

            for (int i = 0; i < mazee.Length;i++) {
                for (int j = 0; j < mazee[0].Length; j++) {
                    for (int k = 0; k < mazee[0][0].Length; k++) {
                        newMaze[i][j][k] = mazee[i][j][k];
                    }
                }
            }
        
            MummyWhite[] newMummyWhite = new MummyWhite[mummyWhitee.Length];
            for (int i = 0; i < mummyWhitee.Length;i++) {
                newMummyWhite[i] = new MummyWhite(mummyWhitee[i].getX(),mummyWhitee[i].getY());
            }
            MummyRed[] newMummyRed = new MummyRed[mummyRede.Length];
            for (int i = 0; i < mummyRede.Length;i++) {
                newMummyRed[i] = new MummyRed(mummyRede[i].getX(),mummyRede[i].getY());
            }
            ScorpionWhite[] newSk = new ScorpionWhite[ske.Length];
            for (int i = 0; i < ske.Length; i++) {
                newSk[i] = new ScorpionWhite(ske[i].getX(),ske[i].getY());
            }
            ScorpionRed [] newSkRed = new ScorpionRed[skRede.Length];
            for (int i = 0; i < skRede.Length; i++) {
                newSkRed[i] = new ScorpionRed(skRed[i].getX(),skRed[i].getY());
            }
            Human newHuman = new Human(humane.getX(),humane.getY());
            short newStep = stepe;
        
            State newState = new State(newMaze,newKey,newMummyWhite,newMummyRed,newSk,newSkRed,newHuman,newStep);
            return newState;
        }

        // Getter and Setter Autogenerated

        public void setMaze(short[][][] maze)
        {
            this.maze = maze;
        }

        public void setMummyWhite(MummyWhite[] mummyWhite)
        {
            this.mummyWhite = mummyWhite;
        }

        public void setMummyRed(MummyRed[] mummyRed)
        {
            this.mummyRed = mummyRed;
        }

        public void setSk(ScorpionWhite[] sk)
        {
            this.sk = sk;
        }

        public void setHuman(Human human)
        {
            this.human = human;
        }

        public void setStep(short step)
        {
            this.step = step;
        }

        public short[][][] getMaze()
        {
            return maze;
        }

        public MummyWhite[] getMummyWhite()
        {
            return mummyWhite;
        }

        public MummyRed[] getMummyRed()
        {
            return mummyRed;
        }

        public ScorpionWhite[] getSk()
        {
            return sk;
        }

        public Human getHuman()
        {
            return human;
        }

        public short getStep()
        {
            return step;
        }

        public Keyd[] getKey()
        {
            return key;
        }

        public void setKey(Keyd[] key)
        {
            this.key = key;
        }

        public ScorpionRed[] getSkRed()
        {
            return skRed;
        }

        public void setSkRed(ScorpionRed[] skRed)
        {
            this.skRed = skRed;
        }
    }
}
